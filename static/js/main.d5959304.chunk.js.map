{"version":3,"sources":["components/chart/ChartFilters.js","components/chart/Chart.js","components/footer/Footer.js","components/sideDrawer/SideDrawer.js","data/apiLinks.js","components/tableDisplay/TableDisplay.js","components/title/Title.js","components/dashboard/Dashboard.js","components/app/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","chartInputs","marginBottom","display","flexDirection","chartInput","margin","padding","chartOptions","dataLabel","fontSize","radioButton","ChartFilters","props","chartDisplay","chartDateRange","changeChartDisplay","changeChartDateRange","classes","className","FormControl","Select","native","value","onChange","inputProps","name","id","defaultProps","selectStateCurrent","selectStateHistory","Chart","selectStateInfo","selectState","theme","useTheme","displayType","yLabel","type","getYLabel","data","filter","day","dayObj","dateType","lastWeek","moment","subtract","dateChecked","isAfter","lastMonth","filterDateRange","slice","reverse","map","time","format","amount","minHeight","top","right","bottom","left","x1","y1","x2","y2","offset","stopColor","palette","primary","main","stopOpacity","dataKey","stroke","text","secondary","angle","position","style","textAnchor","fill","strokeDasharray","fillOpacity","Footer","Typography","variant","color","align","Link","href","drawerPaper","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","height","overflowY","drawerPaperClose","overflowX","leavingScreen","spacing","breakpoints","up","listItem","cursor","background","listItemSelected","toolbarIcon","alignItems","justifyContent","SideDrawer","sideOpen","statesInfo","changeState","handleDrawerClose","Drawer","paper","clsx","open","IconButton","onClick","Divider","List","ListItem","info","selected","state","label","key","BASE_URL","urlStates","urlDaily","urlInfo","urlUSCurrent","urlUSHistoric","TableDisplay","Fragment","component","gutterBottom","Table","size","TableHead","TableRow","TableCell","TableBody","row","hash","positive","positiveIncrease","negative","negativeIncrease","totalTestResults","totalTestResultsIncrease","Math","round","death","deathIncrease","hospitalized","hospitalizedIncrease","formatLink","link","linkStyle","notes","fontStyle","Title","title","currentState","formatTitle","primaryLink","covid19Site","secondaryLink","covid19SiteSecondary","grade","root","appBar","zIndex","drawer","appBarShift","marginLeft","appBarSpacer","mixins","toolbar","content","flexGrow","overflow","container","paddingTop","paddingBottom","paddingRight","menuButton","marginRight","down","menuButtonHidden","chartPaper","tablePaper","Dashboard","useState","statesCurrent","setCurrentStates","statesHistoric","setHistoricStates","setInfoStates","usCurrent","setUSCurrent","usHistoric","setUSHistoric","setChartDisplay","setChartDateRange","setSelectedState","React","setOpen","useEffect","fetch","then","res","json","catch","err","console","sort","a","b","find","s","CssBaseline","AppBar","Toolbar","edge","aria-label","noWrap","stateAbr","Container","maxWidth","Grid","item","xs","md","lg","Paper","target","Box","pt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d5959304.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/core/styles'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Select from '@material-ui/core/Select'\n\nconst useStyles = makeStyles({\n\tchartInputs: {\n\t\tmarginBottom: 6,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row'\n\t},\n\tchartInput: {\n\t\tmargin: '0 6px',\n\t\tpadding: 2\n\t},\n\tchartOptions: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row'\n\t},\n\tdataLabel: {\n\t\tfontSize: '0.8rem'\n\t},\n\tradioButton: {\n\t\tpadding: 4\n\t}\n})\n\nconst ChartFilters = props => {\n\tconst {\n\t\tchartDisplay,\n\t\tchartDateRange,\n\t\tchangeChartDisplay,\n\t\tchangeChartDateRange\n\t} = props\n\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<div className={classes.chartInputs}>\n\t\t\t<FormControl>\n\t\t\t\t<Select\n\t\t\t\t\tnative\n\t\t\t\t\tvalue={chartDisplay}\n\t\t\t\t\tonChange={changeChartDisplay}\n\t\t\t\t\tclassName={classes.chartInput}\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tname: 'display',\n\t\t\t\t\t\tid: 'chartDisplayOptions'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<option value=\"positive\">Positive Cases</option>\n\t\t\t\t\t<option value=\"death\">Deaths</option>\n\t\t\t\t\t<option value=\"totalTestResults\">Total Tested</option>\n\t\t\t\t\t<option value=\"hospitalized\">Hospitalized</option>\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\n\t\t\t<FormControl>\n\t\t\t\t<Select\n\t\t\t\t\tnative\n\t\t\t\t\tvalue={chartDateRange}\n\t\t\t\t\tonChange={changeChartDateRange}\n\t\t\t\t\tclassName={classes.chartInput}\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tname: 'date',\n\t\t\t\t\t\tid: 'chartDateOptions'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<option value=\"week\">Past Week</option>\n\t\t\t\t\t<option value=\"month\">Past Month</option>\n\t\t\t\t\t<option value=\"total\">Total</option>\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</div>\n\t)\n}\n\nChartFilters.propTypes = {\n\tchartDisplay: PropTypes.string,\n\tchartDateRange: PropTypes.string,\n\tchangeChartDisplay: PropTypes.func.isRequired,\n\tchangeChartDateRange: PropTypes.func.isRequired\n}\n\nChartFilters.defaultProps = {\n\tchartDisplay: '',\n\tchartDateRange: '',\n\tselectStateCurrent: {},\n\tselectStateHistory: []\n}\n\nexport default ChartFilters\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n\tAreaChart,\n\tArea,\n\tXAxis,\n\tYAxis,\n\tLabel,\n\tCartesianGrid,\n\tTooltip,\n\tResponsiveContainer\n} from 'recharts'\nimport ChartFilters from './ChartFilters'\n\nconst getYLabel = type => {\n\tswitch (type) {\n\t\tcase 'positive':\n\t\t\treturn 'Total Tested Positive'\n\n\t\tcase 'death':\n\t\t\treturn 'Total Deaths'\n\n\t\tcase 'totalTestResults':\n\t\t\treturn 'Total Tested'\n\n\t\tcase 'hospitalized':\n\t\t\treturn 'Total Hospitalized'\n\t\tdefault:\n\t\t\treturn ''\n\t}\n}\n\nconst filterDateRange = (dayObj, dateType) => {\n\tswitch (dateType) {\n\t\tcase 'week':\n\t\t\tconst lastWeek = moment().subtract(7, 'days')\n\n\t\t\treturn moment(dayObj.dateChecked).isAfter(lastWeek)\n\n\t\tcase 'month':\n\t\t\tconst lastMonth = moment().subtract(1, 'months')\n\n\t\t\treturn moment(dayObj.dateChecked).isAfter(lastMonth)\n\n\t\tdefault:\n\t\t\treturn true\n\t}\n}\n\nconst createData = (time, amount) => {\n\treturn { time, amount }\n}\n\nconst Chart = props => {\n\tconst {\n\t\tselectStateInfo,\n\t\tselectStateCurrent,\n\t\tselectStateHistory,\n\t\tselectState,\n\t\tchartDisplay,\n\t\tchartDateRange\n\t} = props\n\n\tconst theme = useTheme()\n\n\tconst displayType = chartDisplay || 'positive'\n\tconst yLabel = getYLabel(displayType)\n\n\tconst data = selectStateHistory\n\t\t.filter(day => filterDateRange(day, chartDateRange))\n\t\t.slice()\n\t\t.reverse()\n\t\t.map(day => {\n\t\t\treturn createData(\n\t\t\t\tday.dateChecked ? moment(day.dateChecked).format('MM/DD/YYYY') : '',\n\t\t\t\tday[displayType] || 0\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<ChartFilters {...props} />\n\n\t\t\t<ResponsiveContainer minHeight={290}>\n\t\t\t\t<AreaChart\n\t\t\t\t\tdata={data}\n\t\t\t\t\tmargin={{\n\t\t\t\t\t\ttop: 8,\n\t\t\t\t\t\tright: 8,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tleft: 12\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<defs>\n\t\t\t\t\t\t<linearGradient id=\"main\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n\t\t\t\t\t\t\t<stop\n\t\t\t\t\t\t\t\toffset=\"5%\"\n\t\t\t\t\t\t\t\tstopColor={theme.palette.primary.main}\n\t\t\t\t\t\t\t\tstopOpacity={0.8}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<stop\n\t\t\t\t\t\t\t\toffset=\"95%\"\n\t\t\t\t\t\t\t\tstopColor={theme.palette.primary.main}\n\t\t\t\t\t\t\t\tstopOpacity={0}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</linearGradient>\n\t\t\t\t\t</defs>\n\n\t\t\t\t\t<XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n\t\t\t\t\t<YAxis stroke={theme.palette.text.secondary}>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tangle={270}\n\t\t\t\t\t\t\tposition=\"left\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttextAnchor: 'middle',\n\t\t\t\t\t\t\t\tfill: theme.palette.text.primary\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{yLabel}\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t</YAxis>\n\n\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t<Tooltip />\n\n\t\t\t\t\t<Area\n\t\t\t\t\t\ttype=\"linear\"\n\t\t\t\t\t\tdataKey=\"amount\"\n\t\t\t\t\t\tstroke={theme.palette.primary.main}\n\t\t\t\t\t\tfillOpacity={1}\n\t\t\t\t\t\tfill=\"url(#main)\"\n\t\t\t\t\t/>\n\t\t\t\t</AreaChart>\n\t\t\t</ResponsiveContainer>\n\t\t</Fragment>\n\t)\n}\n\nChart.propTypes = {\n\tselectStateInfo: PropTypes.object,\n\tselectStateCurrent: PropTypes.object,\n\tselectStateHistory: PropTypes.array,\n\tselectState: PropTypes.string,\n\tchartDisplay: PropTypes.string,\n\tchartDateRange: PropTypes.string,\n\tchangeChartDisplay: PropTypes.func.isRequired,\n\tchangeChartDateRange: PropTypes.func.isRequired\n}\n\nChart.defaultProps = {\n\tselectState: '',\n\tselectStateInfo: {},\n\tselectStateCurrent: {},\n\tselectStateHistory: []\n}\n\nexport default Chart\n\n// <LineChart\n// \tdata={data}\n// \tmargin={{\n// \t\ttop: 8,\n// \t\tright: 8,\n// \t\tbottom: 0,\n// \t\tleft: 12\n// \t}}\n// >\n// \t<XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n// \t<YAxis stroke={theme.palette.text.secondary}>\n// \t\t<Label\n// \t\t\tangle={270}\n// \t\t\tposition=\"left\"\n// \t\t\tstyle={{\n// \t\t\t\ttextAnchor: 'middle',\n// \t\t\t\tfill: theme.palette.text.primary\n// \t\t\t}}\n// \t\t>\n// \t\t\t{yLabel}\n// \t\t</Label>\n// \t</YAxis>\n// \t<Line\n// \t\ttype=\"monotone\"\n// \t\tdataKey=\"amount\"\n// \t\tstroke={theme.palette.primary.main}\n// \t\tdot={false}\n// \t/>\n// </LineChart>\n\n// <FormControl className={classes.formControl}>\n// \t<RadioGroup\n// \t\taria-label=\"displayOptions\"\n// \t\tname=\"displayOptions\"\n// \t\tclassName={classes.chartOptions}\n// \t\tvalue={chartDisplay}\n// \t\tonChange={changeChartDisplay}\n// \t>\n// \t\t<FormControlLabel\n// \t\t\tvalue=\"positive\"\n// \t\t\tcontrol={\n// \t\t\t\t<Radio size=\"small\" classes={{ root: classes.radioButton }} />\n// \t\t\t}\n// \t\t\tclasses={{ label: classes.dataLabel }}\n// \t\t\tlabel=\"Positive Cases\"\n// \t\t/>\n// \t\t<FormControlLabel\n// \t\t\tvalue=\"death\"\n// \t\t\tcontrol={\n// \t\t\t\t<Radio size=\"small\" classes={{ root: classes.radioButton }} />\n// \t\t\t}\n// \t\t\tclasses={{ label: classes.dataLabel }}\n// \t\t\tlabel=\"Deaths\"\n// \t\t/>\n// \t\t<FormControlLabel\n// \t\t\tvalue=\"totalTestResults\"\n// \t\t\tcontrol={\n// \t\t\t\t<Radio size=\"small\" classes={{ root: classes.radioButton }} />\n// \t\t\t}\n// \t\t\tclasses={{ label: classes.dataLabel }}\n// \t\t\tlabel=\"Tested\"\n// \t\t/>\n\n// \t\t<FormControlLabel\n// \t\t\tvalue=\"hospitalized\"\n// \t\t\tcontrol={\n// \t\t\t\t<Radio size=\"small\" classes={{ root: classes.radioButton }} />\n// \t\t\t}\n// \t\t\tclasses={{ label: classes.dataLabel }}\n// \t\t\tlabel=\"Hospitalized\"\n// \t\t/>\n// \t</RadioGroup>\n// </FormControl>\n","import React, { Fragment } from 'react'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n\t\t\t\t<Link color=\"inherit\" href=\"https://github.com/perryf/covid-tracker\">\n\t\t\t\t\tCOVID 19 Tracker Source Code\n\t\t\t\t</Link>\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n\t\t\t\t{'All data from '}\n\t\t\t\t<Link color=\"inherit\" href=\"https://covidtracking.com/\">\n\t\t\t\t\tThe COVID Tracking Project\n\t\t\t\t</Link>\n\t\t\t</Typography>\n\t\t</Fragment>\n\t)\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme => ({\n\tdrawerPaper: {\n\t\tposition: 'relative',\n\t\twhiteSpace: 'nowrap',\n\t\twidth: drawerWidth,\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen\n\t\t}),\n\t\theight: '100vh',\n\t\toverflowY: 'scroll'\n\t},\n\tdrawerPaperClose: {\n\t\toverflowX: 'hidden',\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen\n\t\t}),\n\t\twidth: theme.spacing(7),\n\t\t[theme.breakpoints.up('xs')]: {\n\t\t\twidth: theme.spacing(9)\n\t\t}\n\t},\n\tlistItem: {\n\t\tcursor: 'pointer',\n\t\t'&:hover': {\n\t\t\tbackground: '#ddd'\n\t\t}\n\t},\n\tlistItemSelected: {\n\t\tbackground: '#dde'\n\t},\n\ttoolbarIcon: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-end'\n\t}\n}))\n\nconst SideDrawer = props => {\n\tconst {\n\t\tselectState,\n\t\tsideOpen,\n\t\tstatesInfo,\n\t\tchangeState,\n\t\thandleDrawerClose\n\t} = props\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<Drawer\n\t\t\tvariant=\"permanent\"\n\t\t\tclasses={{\n\t\t\t\tpaper: clsx(classes.drawerPaper, !sideOpen && classes.drawerPaperClose)\n\t\t\t}}\n\t\t\topen={sideOpen}\n\t\t>\n\t\t\t<div className={classes.toolbarIcon}>\n\t\t\t\t<IconButton onClick={handleDrawerClose}>\n\t\t\t\t\t<ChevronLeftIcon />\n\t\t\t\t</IconButton>\n\t\t\t</div>\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem\n\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\tclasses.listItem,\n\t\t\t\t\t\tselectState === 'us' && classes.listItemSelected\n\t\t\t\t\t)}\n\t\t\t\t\tonClick={() => changeState('us')}\n\t\t\t\t>\n\t\t\t\t\tUSA\n\t\t\t\t</ListItem>\n\t\t\t\t{statesInfo.map(info => {\n\t\t\t\t\tconst selected = info.state === selectState\n\t\t\t\t\tconst label = sideOpen\n\t\t\t\t\t\t? `${info.name || ''} ${info.state ? `(${info.state})` : ''}`\n\t\t\t\t\t\t: info.state\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={info.state}\n\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\tclasses.listItem,\n\t\t\t\t\t\t\t\tselected && classes.listItemSelected\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tonClick={() => changeState(info.state)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</List>\n\t\t</Drawer>\n\t)\n}\n\nSideDrawer.propTypes = {\n\tselectState: PropTypes.string,\n\tsideOpen: PropTypes.bool.isRequired,\n\tstatesInfo: PropTypes.array,\n\tchangeState: PropTypes.func.isRequired,\n\thandleDrawerClose: PropTypes.func.isRequired\n}\n\nSideDrawer.defaultProps = {\n\tselectState: '',\n\tstatesInfo: []\n}\n\nexport default SideDrawer\n","const BASE_URL = 'https://covidtracking.com/api'\n\nexport const urlStates = `${BASE_URL}/states`\nexport const urlDaily = `${BASE_URL}/states/daily`\nexport const urlInfo = `${BASE_URL}/states/info`\nexport const urlUSCurrent = `${BASE_URL}/us`\nexport const urlUSHistoric = `${BASE_URL}/us/daily`\nexport const urlCounties = `${BASE_URL}/counties`\nexport const urlTrackers = `${BASE_URL}/urls`\nexport const urlStateScreenshots = `${BASE_URL}/screenshots`\nexport const urlPress = `${BASE_URL}/press`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport moment from 'moment'\n\nconst TableDisplay = props => {\n\tconst {\n\t\tselectStateInfo,\n\t\tselectStateCurrent,\n\t\tselectStateHistory,\n\t\tselectState\n\t} = props\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n\t\t\t\tHistory\n\t\t\t</Typography>\n\t\t\t<Table size=\"medium\">\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>Date</TableCell>\n\t\t\t\t\t\t<TableCell>Tested Positive</TableCell>\n\t\t\t\t\t\t<TableCell>Negative Tests</TableCell>\n\t\t\t\t\t\t<TableCell>Total Tested</TableCell>\n\t\t\t\t\t\t<TableCell>Percent Positive</TableCell>\n\t\t\t\t\t\t<TableCell>Deaths</TableCell>\n\t\t\t\t\t\t<TableCell>Hospitalized</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{selectStateHistory.map(row => (\n\t\t\t\t\t\t<TableRow key={row.hash}>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.dateChecked\n\t\t\t\t\t\t\t\t\t? moment(row.dateChecked).format('MM/DD/YYYY')\n\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.positive || ''} (+{row.positiveIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.negative || ''} (+{row.negativeIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.totalTestResults || ''} (+\n\t\t\t\t\t\t\t\t{row.totalTestResultsIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.positive && row.totalTestResults\n\t\t\t\t\t\t\t\t\t? `${Math.round(\n\t\t\t\t\t\t\t\t\t\t\t(row.positive / row.totalTestResults) * 100,\n\t\t\t\t\t\t\t\t\t\t\t2\n\t\t\t\t\t\t\t\t\t  )}%`\n\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.death || 0} (+{row.deathIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.hospitalized || 0} (+{row.hospitalizedIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</React.Fragment>\n\t)\n}\n\nTableDisplay.propTypes = {\n\tselectState: PropTypes.string,\n\tselectStateInfo: PropTypes.object,\n\tselectStateCurrent: PropTypes.object,\n\tselectStateHistory: PropTypes.array\n}\n\nTableDisplay.defaultProps = {\n\tselectState: '',\n\tselectStateInfo: {},\n\tselectStateCurrent: {},\n\tselectStateHistory: []\n}\n\nexport default TableDisplay\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\n\nconst formatLink = link => {\n\treturn link ? (\n\t\t<Link color=\"inherit\" href={link}>\n\t\t\t{link}\n\t\t</Link>\n\t) : (\n\t\t''\n\t)\n}\n\nconst formatTitle = (selectState, info, currentState) => {\n\tif (selectState === 'us') {\n\t\treturn 'USA'\n\t}\n\tif (info.name) {\n\t\treturn `${info.name} (${info.state})`\n\t}\n\treturn 'Select a State'\n}\n\nconst useStyles = makeStyles({\n\tlinkStyle: {\n\t\tcolor: '#e33371'\n\t},\n\tnotes: {\n\t\tmargin: 4,\n\t\tfontStyle: 'italic'\n\t}\n})\n\nconst Title = props => {\n\tconst { selectStateInfo, selectStateCurrent, selectState } = props\n\tconst classes = useStyles()\n\n\tconst title = formatTitle(selectState, selectStateInfo)\n\tconst primaryLink = formatLink(selectStateInfo.covid19Site)\n\tconst secondaryLink = formatLink(selectStateInfo.covid19SiteSecondary)\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography component=\"h2\" variant=\"h6\" color=\"primary\">\n\t\t\t\t{title}\n\t\t\t</Typography>\n\t\t\t{selectStateCurrent.grade && (\n\t\t\t\t<Typography component=\"p\" variant=\"caption\" color=\"textSecondary\">\n\t\t\t\t\tData quality grade: {selectStateCurrent.grade}\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t\t<div className={classes.linkStyle}>{primaryLink}</div>\n\t\t\t<div className={classes.linkStyle}>{secondaryLink}</div>\n\t\t\t<p className={classes.notes}>{selectStateInfo.notes || ''}</p>\n\t\t</div>\n\t)\n}\nTitle.propTypes = {\n\tchildren: PropTypes.node,\n\tselectState: PropTypes.string,\n\tselectStateInfo: PropTypes.object,\n\tselectStateCurrent: PropTypes.object\n}\n\nTitle.defaultProps = {\n\tselectState: '',\n\tselectStateInfo: {},\n\tselectStateCurrent: {}\n}\n\nexport default Title\n","import React, { useState, useEffect } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Box from '@material-ui/core/Box'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Chart from '../chart/Chart'\nimport Container from '@material-ui/core/Container'\nimport Footer from '../footer/Footer'\nimport IconButton from '@material-ui/core/IconButton'\nimport Grid from '@material-ui/core/Grid'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Paper from '@material-ui/core/Paper'\nimport SideDrawer from '../sideDrawer/SideDrawer'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { urlStates, urlDaily, urlInfo, urlUSCurrent, urlUSHistoric } from 'data'\nimport TableDisplay from '../tableDisplay/TableDisplay'\nimport Title from '../title/Title'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme => {\n\treturn {\n\t\troot: {\n\t\t\tdisplay: 'flex'\n\t\t},\n\t\tappBar: {\n\t\t\tzIndex: theme.zIndex.drawer + 1,\n\t\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\t\tduration: theme.transitions.duration.leavingScreen\n\t\t\t})\n\t\t},\n\t\tappBarShift: {\n\t\t\tmarginLeft: drawerWidth,\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\t\tduration: theme.transitions.duration.enteringScreen\n\t\t\t})\n\t\t},\n\t\tappBarSpacer: theme.mixins.toolbar, // Moves main down by amount appBar takes up\n\t\tcontent: {\n\t\t\tflexGrow: 1,\n\t\t\theight: '100vh',\n\t\t\toverflow: 'auto'\n\t\t},\n\t\tcontainer: {\n\t\t\tpaddingTop: theme.spacing(1),\n\t\t\tpaddingBottom: theme.spacing(1)\n\t\t},\n\t\ttoolbar: {\n\t\t\tpaddingRight: 24 // keep right padding when drawer closed\n\t\t},\n\t\tmenuButton: {\n\t\t\tmarginRight: 36,\n\t\t\t[theme.breakpoints.down('xs')]: {\n\t\t\t\tdisplay: 'none'\n\t\t\t}\n\t\t},\n\t\tmenuButtonHidden: {\n\t\t\tdisplay: 'none'\n\t\t},\n\t\tpaper: {\n\t\t\tpadding: theme.spacing(2),\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column'\n\t\t},\n\t\tchartPaper: {\n\t\t\theight: 360\n\t\t},\n\t\ttablePaper: {\n\t\t\toverflow: 'auto'\n\t\t},\n\t\ttitle: {\n\t\t\tflexGrow: 1\n\t\t}\n\t}\n})\n\nconst Dashboard = () => {\n\tconst [statesCurrent, setCurrentStates] = useState([])\n\tconst [statesHistoric, setHistoricStates] = useState([])\n\tconst [statesInfo, setInfoStates] = useState([])\n\tconst [usCurrent, setUSCurrent] = useState([])\n\tconst [usHistoric, setUSHistoric] = useState([])\n\tconst [chartDisplay, setChartDisplay] = useState('positive')\n\tconst [chartDateRange, setChartDateRange] = useState('total')\n\tconst [selectState, setSelectedState] = useState('us')\n\tconst [sideOpen, setOpen] = React.useState(false)\n\n\t// * Effect\n\tuseEffect(() => {\n\t\tfetch(urlStates)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => setCurrentStates(json))\n\t\t\t.catch(err => console.info(err))\n\n\t\tfetch(urlDaily)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => setHistoricStates(json))\n\t\t\t.catch(err => console.info(err))\n\n\t\tfetch(urlInfo)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json =>\n\t\t\t\tsetInfoStates(\n\t\t\t\t\tjson.sort((a, b) => {\n\t\t\t\t\t\tif (a.name < b.name) return -1\n\t\t\t\t\t\tif (b.name < a.name) return 1\n\t\t\t\t\t\treturn 0\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t\t.catch(err => console.info(err))\n\n\t\tfetch(urlUSCurrent)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => setUSCurrent(json))\n\t\t\t.catch(err => console.info(err))\n\n\t\tfetch(urlUSHistoric)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => setUSHistoric(json))\n\t\t\t.catch(err => console.info(err))\n\t}, [])\n\n\tconst changeState = stateAbr => {\n\t\tsetSelectedState(stateAbr)\n\t}\n\tconst changeChartDisplay = ({ target: { value } }) => {\n\t\tsetChartDisplay(value)\n\t}\n\tconst changeChartDateRange = ({ target: { value } }) => {\n\t\tsetChartDateRange(value)\n\t}\n\tconst handleDrawerClose = () => {\n\t\tsetOpen(false)\n\t}\n\tconst handleDrawerOpen = () => {\n\t\tsetOpen(true)\n\t}\n\n\t// * STYLES\n\tconst classes = useStyles()\n\n\t// * INCLUDES US TOTALS WITH STATES\n\tconst selectStateCurrent =\n\t\tselectState === 'us'\n\t\t\t? usCurrent[0]\n\t\t\t: statesCurrent.find(s => s.state === selectState)\n\tconst selectStateHistory =\n\t\tselectState === 'us'\n\t\t\t? usHistoric\n\t\t\t: statesHistoric.filter(s => s.state === selectState)\n\tconst selectStateInfo = statesInfo.find(s => s.state === selectState)\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar\n\t\t\t\tposition=\"absolute\"\n\t\t\t\tclassName={clsx(classes.appBar, sideOpen && classes.appBarShift)}\n\t\t\t>\n\t\t\t\t<Toolbar className={classes.toolbar} variant=\"dense\">\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tonClick={handleDrawerOpen}\n\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\tclasses.menuButton,\n\t\t\t\t\t\t\tsideOpen && classes.menuButtonHidden\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tcomponent=\"h1\"\n\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tnoWrap\n\t\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\t>\n\t\t\t\t\t\tCOVID 19 Tracker\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\n\t\t\t{/* Sidebar */}\n\t\t\t<SideDrawer\n\t\t\t\tsideOpen={sideOpen}\n\t\t\t\tstatesInfo={statesInfo}\n\t\t\t\tselectState={selectState}\n\t\t\t\tchangeState={changeState}\n\t\t\t\thandleDrawerClose={handleDrawerClose}\n\t\t\t/>\n\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.appBarSpacer} />\n\t\t\t\t<Container maxWidth=\"lg\" className={classes.container}>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{/* Title */}\n\t\t\t\t\t\t<Grid item xs={12} md={12} lg={12}>\n\t\t\t\t\t\t\t<Title\n\t\t\t\t\t\t\t\tselectState={selectState}\n\t\t\t\t\t\t\t\tselectStateInfo={selectStateInfo}\n\t\t\t\t\t\t\t\tselectStateCurrent={selectStateCurrent}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Chart */}\n\t\t\t\t\t\t<Grid item xs={12} md={12} lg={12}>\n\t\t\t\t\t\t\t<Paper className={clsx(classes.paper, classes.chartPaper)}>\n\t\t\t\t\t\t\t\t<Chart\n\t\t\t\t\t\t\t\t\tselectStateCurrent={selectStateCurrent}\n\t\t\t\t\t\t\t\t\tselectStateHistory={selectStateHistory}\n\t\t\t\t\t\t\t\t\tselectStateInfo={selectStateInfo}\n\t\t\t\t\t\t\t\t\tselectState={selectState}\n\t\t\t\t\t\t\t\t\tchartDisplay={chartDisplay}\n\t\t\t\t\t\t\t\t\tchartDateRange={chartDateRange}\n\t\t\t\t\t\t\t\t\tchangeChartDisplay={changeChartDisplay}\n\t\t\t\t\t\t\t\t\tchangeChartDateRange={changeChartDateRange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Recent Table */}\n\t\t\t\t\t\t<Grid item xs={12} md={12} lg={12}>\n\t\t\t\t\t\t\t<Paper className={clsx(classes.paper, classes.tablePaper)}>\n\t\t\t\t\t\t\t\t<TableDisplay\n\t\t\t\t\t\t\t\t\tselectStateCurrent={selectStateCurrent}\n\t\t\t\t\t\t\t\t\tselectStateHistory={selectStateHistory}\n\t\t\t\t\t\t\t\t\tselectStateInfo={selectStateInfo}\n\t\t\t\t\t\t\t\t\tselectState={selectState}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Box pt={4}>\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</Box>\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n\nexport default Dashboard\n","import React from 'react'\nimport Dashboard from '../dashboard/Dashboard'\nimport './App.css'\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<Dashboard />\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from 'components/app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}