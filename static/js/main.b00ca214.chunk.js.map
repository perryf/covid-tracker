{"version":3,"sources":["data/apiLinks.js","components/chart/Chart.js","components/sideDrawer/SideDrawer.js","components/tableDisplay/TableDisplay.js","components/footer/Footer.js","components/title/Title.js","components/dashboard/Dashboard.js","components/app/App.js","serviceWorker.js","index.js"],"names":["BASE_URL","urlStates","urlDaily","urlInfo","urlUSCurrent","urlUSHistoric","useStyles","makeStyles","chartOptions","display","flexDirection","Chart","props","selectStateInfo","selectStateCurrent","selectStateHistory","chartDisplay","selectState","changeChartDisplay","theme","useTheme","classes","displayType","yLabel","type","getYLabel","data","slice","reverse","map","day","time","dateChecked","moment","format","amount","Fragment","FormControl","RadioGroup","aria-label","name","className","value","onChange","FormControlLabel","control","Radio","label","margin","top","right","bottom","left","dataKey","stroke","palette","text","secondary","angle","position","style","textAnchor","fill","primary","main","dot","defaultProps","drawerPaper","whiteSpace","width","listItem","cursor","background","listItemSelected","SideDrawer","statesInfo","changeState","Drawer","variant","List","ListItem","clsx","onClick","info","selected","state","key","TableDisplay","Typography","component","color","gutterBottom","Table","size","TableHead","TableRow","TableCell","TableBody","row","hash","positive","positiveIncrease","negative","negativeIncrease","totalTestResults","totalTestResultsIncrease","Math","round","death","hospitalized","Footer","align","Link","href","Date","getFullYear","formatLink","link","Title","title","grade","primaryLink","covid19Site","secondaryLink","covid19SiteSecondary","notes","root","appBar","zIndex","drawer","appBarShift","marginLeft","flexGrow","appBarSpacer","mixins","toolbar","content","height","overflow","container","paddingTop","spacing","paddingBottom","paper","padding","fixedHeight","Dashboard","useState","statesCurrent","setCurrentStates","statesHistoric","setHistoricStates","setInfoStates","usCurrent","setUSCurrent","usHistoric","setUSHistoric","setChartDisplay","setSelectedState","useEffect","fetch","then","res","json","catch","err","console","sort","a","b","fixedHeightPaper","find","s","filter","CssBaseline","AppBar","Toolbar","noWrap","stateAbr","Container","maxWidth","Grid","item","xs","md","lg","Paper","target","Box","pt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b00ca214.chunk.js","sourcesContent":["const BASE_URL = 'https://covidtracking.com/api'\n\nexport const urlStates = `${BASE_URL}/states`\nexport const urlDaily = `${BASE_URL}/states/daily`\nexport const urlInfo = `${BASE_URL}/states/info`\nexport const urlUSCurrent = `${BASE_URL}/us`\nexport const urlUSHistoric = `${BASE_URL}/us/daily`\nexport const urlCounties = `${BASE_URL}/counties`\nexport const urlTrackers = `${BASE_URL}/urls`\nexport const urlStateScreenshots = `${BASE_URL}/screenshots`\nexport const urlPress = `${BASE_URL}/press`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/core/styles'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport {\n\tLineChart,\n\tLine,\n\tXAxis,\n\tYAxis,\n\tLabel,\n\tResponsiveContainer\n} from 'recharts'\n\nconst getYLabel = type => {\n\tswitch (type) {\n\t\tcase 'positive':\n\t\t\treturn 'Total Positive'\n\n\t\tcase 'death':\n\t\t\treturn 'Total Deaths'\n\n\t\tcase 'totalTestResults':\n\t\t\treturn 'Total Tested'\n\n\t\tcase 'hospitalized':\n\t\t\treturn 'Total Hospitalized'\n\t\tdefault:\n\t\t\treturn ''\n\t}\n}\n\nconst useStyles = makeStyles({\n\tchartOptions: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row'\n\t}\n})\n\nconst createData = (time, amount) => {\n\treturn { time, amount }\n}\n\nconst Chart = props => {\n\tconst {\n\t\tselectStateInfo,\n\t\tselectStateCurrent,\n\t\tselectStateHistory,\n\t\tselectState,\n\t\tchartDisplay,\n\t\tchangeChartDisplay\n\t} = props\n\n\tconst theme = useTheme()\n\tconst classes = useStyles()\n\n\tconst displayType = chartDisplay || 'positive'\n\tconst yLabel = getYLabel(displayType)\n\n\tconst data = selectStateHistory\n\t\t.slice()\n\t\t.reverse()\n\t\t.map(day => {\n\t\t\treturn createData(\n\t\t\t\tday.dateChecked ? moment(day.dateChecked).format('MM/DD/YYYY') : '',\n\t\t\t\tday[displayType] || 0\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<FormControl>\n\t\t\t\t{false && <FormLabel component=\"legend\">Display</FormLabel>}\n\t\t\t\t<RadioGroup\n\t\t\t\t\taria-label=\"displayOptions\"\n\t\t\t\t\tname=\"displayOptions\"\n\t\t\t\t\tclassName={classes.chartOptions}\n\t\t\t\t\tvalue={chartDisplay}\n\t\t\t\t\tonChange={changeChartDisplay}\n\t\t\t\t>\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tvalue=\"positive\"\n\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\tlabel=\"Positives\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormControlLabel value=\"death\" control={<Radio />} label=\"Deaths\" />\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tvalue=\"totalTestResults\"\n\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\tlabel=\"Total Tested\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tvalue=\"hospitalized\"\n\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\tlabel=\"Total Hospitalized\"\n\t\t\t\t\t/>\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\n\t\t\t<ResponsiveContainer>\n\t\t\t\t<LineChart\n\t\t\t\t\tdata={data}\n\t\t\t\t\tmargin={{\n\t\t\t\t\t\ttop: 8,\n\t\t\t\t\t\tright: 8,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tleft: 12\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n\t\t\t\t\t<YAxis stroke={theme.palette.text.secondary}>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tangle={270}\n\t\t\t\t\t\t\tposition=\"left\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttextAnchor: 'middle',\n\t\t\t\t\t\t\t\tfill: theme.palette.text.primary\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{yLabel}\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t</YAxis>\n\t\t\t\t\t<Line\n\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\tdataKey=\"amount\"\n\t\t\t\t\t\tstroke={theme.palette.primary.main}\n\t\t\t\t\t\tdot={false}\n\t\t\t\t\t/>\n\t\t\t\t</LineChart>\n\t\t\t</ResponsiveContainer>\n\t\t</React.Fragment>\n\t)\n}\n\nChart.propTypes = {\n\tselectState: PropTypes.string,\n\tchartDisplay: PropTypes.string,\n\tselectStateInfo: PropTypes.object,\n\tselectStateCurrent: PropTypes.object,\n\tselectStateHistory: PropTypes.array,\n\tchangeChartDisplay: PropTypes.func.isRequired\n}\n\nChart.defaultProps = {\n\tselectState: '',\n\tselectStateInfo: {},\n\tselectStateCurrent: {},\n\tselectStateHistory: []\n}\n\nexport default Chart\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\n\nconst useStyles = makeStyles({\n\tdrawerPaper: {\n\t\tposition: 'relative',\n\t\twhiteSpace: 'nowrap',\n\t\twidth: 240\n\t},\n\tlistItem: {\n\t\tcursor: 'pointer',\n\t\t'&:hover': {\n\t\t\tbackground: '#ddd'\n\t\t}\n\t},\n\tlistItemSelected: {\n\t\tbackground: '#dde'\n\t}\n})\n\nconst SideDrawer = props => {\n\tconst { statesInfo, selectState, changeState } = props\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<Drawer variant=\"permanent\" className={classes.drawerPaper}>\n\t\t\t<List>\n\t\t\t\t<ListItem\n\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\tclasses.listItem,\n\t\t\t\t\t\tselectState === 'us' && classes.listItemSelected\n\t\t\t\t\t)}\n\t\t\t\t\tonClick={() => changeState('us')}\n\t\t\t\t>\n\t\t\t\t\tUSA\n\t\t\t\t</ListItem>\n\t\t\t\t{statesInfo.map(info => {\n\t\t\t\t\tconst selected = info.state === selectState\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={info.state}\n\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\tclasses.listItem,\n\t\t\t\t\t\t\t\tselected && classes.listItemSelected\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tonClick={() => changeState(info.state)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{info.name} ({info.state})\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</List>\n\t\t</Drawer>\n\t)\n}\n\nSideDrawer.propTypes = {\n\tselectState: PropTypes.string,\n\tstatesInfo: PropTypes.array,\n\tchangeState: PropTypes.func.isRequired\n}\n\nSideDrawer.defaultProps = {\n\tselectState: '',\n\tstatesInfo: []\n}\n\nexport default SideDrawer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport moment from 'moment'\n\nconst TableDisplay = props => {\n\tconst {\n\t\tselectStateInfo,\n\t\tselectStateCurrent,\n\t\tselectStateHistory,\n\t\tselectState\n\t} = props\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n\t\t\t\tHistory\n\t\t\t</Typography>\n\t\t\t<Table size=\"medium\">\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>Date</TableCell>\n\t\t\t\t\t\t<TableCell>Tested Positive</TableCell>\n\t\t\t\t\t\t<TableCell>Negative Tests</TableCell>\n\t\t\t\t\t\t<TableCell>Total Tested</TableCell>\n\t\t\t\t\t\t<TableCell>Percent Positive</TableCell>\n\t\t\t\t\t\t<TableCell>Deaths</TableCell>\n\t\t\t\t\t\t<TableCell>Hospitalized</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{selectStateHistory.map(row => (\n\t\t\t\t\t\t<TableRow key={row.hash}>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.dateChecked\n\t\t\t\t\t\t\t\t\t? moment(row.dateChecked).format('MM/DD/YYYY')\n\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.positive || ''} (+{row.positiveIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.negative || ''} (+{row.negativeIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.totalTestResults || ''} (+\n\t\t\t\t\t\t\t\t{row.totalTestResultsIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.positive && row.totalTestResults\n\t\t\t\t\t\t\t\t\t? `${Math.round(\n\t\t\t\t\t\t\t\t\t\t\t(row.positive / row.totalTestResults) * 100,\n\t\t\t\t\t\t\t\t\t\t\t2\n\t\t\t\t\t\t\t\t\t  )}%`\n\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.death || 0} (+{row.death || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.hospitalized || 0} (+{row.hospitalized || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</React.Fragment>\n\t)\n}\n\nTableDisplay.propTypes = {\n\tselectState: PropTypes.string,\n\tselectStateInfo: PropTypes.object,\n\tselectStateCurrent: PropTypes.object,\n\tselectStateHistory: PropTypes.array\n}\n\nTableDisplay.defaultProps = {\n\tselectState: '',\n\tselectStateInfo: {},\n\tselectStateCurrent: {},\n\tselectStateHistory: []\n}\n\nexport default TableDisplay\n","import React from 'react'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = () => {\n\treturn (\n\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n\t\t\t{'Copyright © '}\n\t\t\t<Link color=\"inherit\" href=\"#\">\n\t\t\t\tCOVID Tracker\n\t\t\t</Link>{' '}\n\t\t\t{new Date().getFullYear()}\n\t\t\t{'.'}\n\t\t</Typography>\n\t)\n}\n\nexport default Footer\n","import React from 'react'\nimport Link from '@material-ui/core/Link'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\n\nconst formatLink = link => {\n\treturn link ? (\n\t\t<Link color=\"inherit\" href={link}>\n\t\t\t{link}\n\t\t</Link>\n\t) : (\n\t\t''\n\t)\n}\n\nconst Title = props => {\n\tconst { selectStateInfo, selectStateCurrent, selectState } = props\n\n\tlet title = 'Select a State'\n\n\tif (selectState === 'us') {\n\t\ttitle = 'USA'\n\t}\n\n\tif (selectStateInfo.name) {\n\t\ttitle = `${selectStateInfo.name} (${selectStateInfo.state}) ${\n\t\t\tselectStateCurrent.grade ? `[grade: ${selectStateCurrent.grade}]` : ''\n\t\t}`\n\t}\n\n\tconst primaryLink = formatLink(selectStateInfo.covid19Site)\n\tconst secondaryLink = formatLink(selectStateInfo.covid19SiteSecondary)\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n\t\t\t\t{title}\n\t\t\t</Typography>\n\t\t\t<div>{primaryLink}</div>\n\t\t\t<div>{secondaryLink}</div>\n\t\t\t<p>\n\t\t\t\t{selectStateInfo.notes ? `State notes: ${selectStateInfo.notes}` : ''}\n\t\t\t</p>\n\t\t</div>\n\t)\n}\nTitle.propTypes = {\n\tchildren: PropTypes.node,\n\tselectState: PropTypes.string,\n\tselectStateInfo: PropTypes.object,\n\tselectStateCurrent: PropTypes.object\n}\n\nTitle.defaultProps = {\n\tselectState: '',\n\tselectStateInfo: {},\n\tselectStateCurrent: {}\n}\n\nexport default Title\n","import React, { useState, useEffect } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Box from '@material-ui/core/Box'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport { urlStates, urlDaily, urlInfo, urlUSCurrent, urlUSHistoric } from 'data'\nimport Chart from '../chart/Chart'\nimport SideDrawer from '../sideDrawer/SideDrawer'\nimport TableDisplay from '../tableDisplay/TableDisplay'\nimport Footer from '../footer/Footer'\nimport Title from '../title/Title'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: 'flex'\n\t},\n\tappBar: {\n\t\tzIndex: theme.zIndex.drawer + 1\n\t},\n\tappBarShift: {\n\t\tmarginLeft: drawerWidth,\n\t\twidth: `calc(100% - ${drawerWidth}px)`\n\t},\n\ttitle: {\n\t\tflexGrow: 1\n\t},\n\tappBarSpacer: theme.mixins.toolbar,\n\tcontent: {\n\t\tflexGrow: 1,\n\t\theight: '100vh',\n\t\toverflow: 'auto'\n\t},\n\tcontainer: {\n\t\tpaddingTop: theme.spacing(4),\n\t\tpaddingBottom: theme.spacing(4)\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(2),\n\t\tdisplay: 'flex',\n\t\toverflow: 'auto',\n\t\tflexDirection: 'column'\n\t},\n\tfixedHeight: {\n\t\theight: 320\n\t}\n}))\n\nconst Dashboard = () => {\n\tconst [statesCurrent, setCurrentStates] = useState([])\n\tconst [statesHistoric, setHistoricStates] = useState([])\n\tconst [statesInfo, setInfoStates] = useState([])\n\tconst [usCurrent, setUSCurrent] = useState([])\n\tconst [usHistoric, setUSHistoric] = useState([])\n\tconst [chartDisplay, setChartDisplay] = useState('positive')\n\tconst [selectState, setSelectedState] = useState('us')\n\n\t// * Effect\n\tuseEffect(() => {\n\t\tfetch(urlStates)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => setCurrentStates(json))\n\t\t\t.catch(err => console.info(err))\n\n\t\tfetch(urlDaily)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => setHistoricStates(json))\n\t\t\t.catch(err => console.info(err))\n\n\t\tfetch(urlInfo)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json =>\n\t\t\t\tsetInfoStates(\n\t\t\t\t\tjson.sort((a, b) => {\n\t\t\t\t\t\tif (a.name < b.name) return -1\n\t\t\t\t\t\tif (b.name < a.name) return 1\n\t\t\t\t\t\treturn 0\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t\t.catch(err => console.info(err))\n\n\t\tfetch(urlUSCurrent)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => setUSCurrent(json))\n\t\t\t.catch(err => console.info(err))\n\n\t\tfetch(urlUSHistoric)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => setUSHistoric(json))\n\t\t\t.catch(err => console.info(err))\n\t}, [])\n\n\tconst changeState = stateAbr => {\n\t\tsetSelectedState(stateAbr)\n\t}\n\n\tconst changeChartDisplay = ({ target: { value } }) => {\n\t\tsetChartDisplay(value)\n\t}\n\n\tconst classes = useStyles()\n\tconst fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n\tconst selectStateCurrent =\n\t\tselectState === 'us'\n\t\t\t? usCurrent[0]\n\t\t\t: statesCurrent.find(s => s.state === selectState)\n\tconst selectStateHistory =\n\t\tselectState === 'us'\n\t\t\t? usHistoric\n\t\t\t: statesHistoric.filter(s => s.state === selectState)\n\tconst selectStateInfo = statesInfo.find(s => s.state === selectState)\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar\n\t\t\t\tposition=\"absolute\"\n\t\t\t\tclassName={clsx(classes.appBar, classes.appBarShift)}\n\t\t\t>\n\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tcomponent=\"h1\"\n\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tnoWrap\n\t\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\t>\n\t\t\t\t\t\tCOVID Tracker\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\n\t\t\t{/* Sidebar */}\n\t\t\t<SideDrawer\n\t\t\t\tchangeState={changeState}\n\t\t\t\tstatesInfo={statesInfo}\n\t\t\t\tselectState={selectState}\n\t\t\t/>\n\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.appBarSpacer} />\n\t\t\t\t<Container maxWidth=\"lg\" className={classes.container}>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{/* Title */}\n\t\t\t\t\t\t<Grid item xs={12} md={12} lg={12}>\n\t\t\t\t\t\t\t<Title\n\t\t\t\t\t\t\t\tselectState={selectState}\n\t\t\t\t\t\t\t\tselectStateInfo={selectStateInfo}\n\t\t\t\t\t\t\t\tselectStateCurrent={selectStateCurrent}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Chart */}\n\t\t\t\t\t\t<Grid item xs={12} md={12} lg={12}>\n\t\t\t\t\t\t\t<Paper className={fixedHeightPaper}>\n\t\t\t\t\t\t\t\t<Chart\n\t\t\t\t\t\t\t\t\tselectStateCurrent={selectStateCurrent}\n\t\t\t\t\t\t\t\t\tselectStateHistory={selectStateHistory}\n\t\t\t\t\t\t\t\t\tselectStateInfo={selectStateInfo}\n\t\t\t\t\t\t\t\t\tselectState={selectState}\n\t\t\t\t\t\t\t\t\tchartDisplay={chartDisplay}\n\t\t\t\t\t\t\t\t\tchangeChartDisplay={changeChartDisplay}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Recent Table */}\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<TableDisplay\n\t\t\t\t\t\t\t\t\tselectStateCurrent={selectStateCurrent}\n\t\t\t\t\t\t\t\t\tselectStateHistory={selectStateHistory}\n\t\t\t\t\t\t\t\t\tselectStateInfo={selectStateInfo}\n\t\t\t\t\t\t\t\t\tselectState={selectState}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Box pt={4}>\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</Box>\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n\nexport default Dashboard\n","import React from 'react'\nimport Dashboard from '../dashboard/Dashboard'\nimport './App.css'\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<Dashboard />\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from 'components/app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}