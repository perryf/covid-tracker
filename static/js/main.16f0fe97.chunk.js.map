{"version":3,"sources":["data/apiLinks.js","components/chart/ChartFilters.js","components/chart/Chart.js","components/footer/Footer.js","components/sideDrawer/SideDrawer.js","components/headerBar/HeaderBar.js","components/tableDisplay/TableDisplay.js","components/stateInfo/StateInfo.js","components/dashboard/Dashboard.js","components/app/App.js","serviceWorker.js","index.js"],"names":["BASE_URL","urlStates","urlDaily","urlInfo","urlUSCurrent","urlUSHistoric","useStyles","makeStyles","chartInputs","marginBottom","display","flexDirection","chartInput","margin","padding","ChartFilters","props","chartDisplay","chartDateRange","changeChartDisplay","changeChartDateRange","classes","className","FormControl","Select","native","value","onChange","inputProps","name","id","defaultProps","selectStateCurrent","selectStateHistory","Chart","theme","useTheme","displayType","isAreaChart","includes","data","filter","day","dayObj","dateType","lastWeek","moment","subtract","dateChecked","isAfter","lastMonth","filterDateRange","slice","reverse","map","time","format","amount","xAxis","dataKey","stroke","palette","text","secondary","yAxis","angle","position","style","textAnchor","fill","primary","type","getYLabel","cartesianGrid","strokeDasharray","toolTip","chartGradients","x1","y1","x2","y2","offset","stopColor","main","stopOpacity","minHeight","top","right","bottom","left","fillOpacity","dot","Footer","Typography","variant","color","align","Link","href","fontStyle","drawerPaper","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","height","overflowY","drawerPaperClose","overflowX","leavingScreen","spacing","breakpoints","up","listItem","cursor","background","listItemSelected","toolbarIcon","alignItems","justifyContent","SideDrawer","selectState","sideOpen","statesInfo","changeState","handleDrawerClose","Drawer","paper","clsx","open","IconButton","onClick","Divider","List","ListItem","info","selected","state","label","key","appBar","zIndex","drawer","appBarShift","marginLeft","toolbar","paddingRight","menuButton","marginRight","down","menuButtonHidden","title","flexGrow","HeaderBar","handleDrawerOpen","AppBar","Toolbar","edge","aria-label","component","noWrap","TableDisplay","gutterBottom","Table","size","TableHead","TableRow","TableCell","TableBody","row","hash","positive","positiveIncrease","negative","negativeIncrease","totalTestResults","totalTestResultsIncrease","Math","round","death","deathIncrease","hospitalized","hospitalizedIncrease","formatLink","link","linkStyle","notes","StateInfo","selectStateInfo","formatTitle","primaryLink","covid19Site","secondaryLink","covid19SiteSecondary","twitterLink","handle","replace","formatTwitter","twitter","grade","root","appBarSpacer","mixins","content","overflow","container","paddingTop","paddingBottom","chartPaper","tablePaper","Dashboard","statesCurrent","statesHistoric","usCurrent","usHistoric","useState","setChartDisplay","setChartDateRange","setSelectedState","React","setOpen","find","s","CssBaseline","stateAbr","Container","maxWidth","Grid","item","xs","md","lg","Paper","target","Box","pt","App","setCurrentStates","setHistoricStates","setInfoStates","setUSCurrent","setUSHistoric","useEffect","fetch","then","res","json","catch","err","console","sort","a","b","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.16f0fe97.chunk.js","sourcesContent":["const BASE_URL = 'https://covidtracking.com/api'\n\nexport const urlStates = `${BASE_URL}/states`\nexport const urlDaily = `${BASE_URL}/states/daily`\nexport const urlInfo = `${BASE_URL}/states/info`\nexport const urlUSCurrent = `${BASE_URL}/us`\nexport const urlUSHistoric = `${BASE_URL}/us/daily`\nexport const urlCounties = `${BASE_URL}/counties`\nexport const urlTrackers = `${BASE_URL}/urls`\nexport const urlStateScreenshots = `${BASE_URL}/screenshots`\nexport const urlPress = `${BASE_URL}/press`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\nconst useStyles = makeStyles({\n\tchartInputs: {\n\t\tmarginBottom: 6,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row'\n\t},\n\tchartInput: {\n\t\tmargin: '0 6px',\n\t\tpadding: 2\n\t}\n})\n\nconst ChartFilters = props => {\n\tconst {\n\t\tchartDisplay,\n\t\tchartDateRange,\n\t\tchangeChartDisplay,\n\t\tchangeChartDateRange\n\t} = props\n\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<div className={classes.chartInputs}>\n\t\t\t<FormControl>\n\t\t\t\t<Select\n\t\t\t\t\tnative\n\t\t\t\t\tvalue={chartDisplay}\n\t\t\t\t\tonChange={changeChartDisplay}\n\t\t\t\t\tclassName={classes.chartInput}\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tname: 'display',\n\t\t\t\t\t\tid: 'chartDisplayOptions'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<option value=\"positive\">Total Positive Cases</option>\n\t\t\t\t\t<option value=\"death\">Total Deaths</option>\n\t\t\t\t\t<option value=\"totalTestResults\">Total Tested</option>\n\t\t\t\t\t<option value=\"hospitalized\">Total Hospitalized</option>\n\t\t\t\t\t<option value=\"positiveIncrease\">New Positive Cases</option>\n\t\t\t\t\t<option value=\"deathIncrease\">New Deaths</option>\n\t\t\t\t\t<option value=\"totalTestResultsIncrease\">New Test Results</option>\n\t\t\t\t\t<option value=\"hospitalizedIncrease\">\n\t\t\t\t\t\tNew Hospitalized Patients\n\t\t\t\t\t</option>\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\n\t\t\t<FormControl>\n\t\t\t\t<Select\n\t\t\t\t\tnative\n\t\t\t\t\tvalue={chartDateRange}\n\t\t\t\t\tonChange={changeChartDateRange}\n\t\t\t\t\tclassName={classes.chartInput}\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tname: 'date',\n\t\t\t\t\t\tid: 'chartDateOptions'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<option value=\"week\">Past Week</option>\n\t\t\t\t\t<option value=\"month\">Past Month</option>\n\t\t\t\t\t<option value=\"total\">Total</option>\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</div>\n\t)\n}\n\nChartFilters.propTypes = {\n\tchartDisplay: PropTypes.string,\n\tchartDateRange: PropTypes.string,\n\tchangeChartDisplay: PropTypes.func.isRequired,\n\tchangeChartDateRange: PropTypes.func.isRequired\n}\n\nChartFilters.defaultProps = {\n\tchartDisplay: '',\n\tchartDateRange: '',\n\tselectStateCurrent: {},\n\tselectStateHistory: []\n}\n\nexport default ChartFilters\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n\tAreaChart,\n\tArea,\n\tLineChart,\n\tLine,\n\tXAxis,\n\tYAxis,\n\tLabel,\n\tCartesianGrid,\n\tTooltip,\n\tResponsiveContainer\n} from 'recharts'\nimport ChartFilters from './ChartFilters'\n\nconst getYLabel = type => {\n\tswitch (type) {\n\t\tcase 'positive':\n\t\t\treturn 'Total Tested Positive'\n\n\t\tcase 'death':\n\t\t\treturn 'Total Deaths'\n\n\t\tcase 'totalTestResults':\n\t\t\treturn 'Total Tested'\n\n\t\tcase 'hospitalized':\n\t\t\treturn 'Total Hospitalized'\n\n\t\tcase 'positiveIncrease':\n\t\t\treturn 'New Positive Cases'\n\n\t\tcase 'deathIncrease':\n\t\t\treturn 'New Deaths'\n\n\t\tcase 'totalTestResultsIncrease':\n\t\t\treturn 'New Test Results'\n\n\t\tcase 'hospitalizedIncrease':\n\t\t\treturn 'New Hospitalized Patients'\n\n\t\tdefault:\n\t\t\treturn ''\n\t}\n}\n\nconst filterDateRange = (dayObj, dateType) => {\n\tswitch (dateType) {\n\t\tcase 'week':\n\t\t\tconst lastWeek = moment().subtract(7, 'days')\n\t\t\treturn moment(dayObj.dateChecked).isAfter(lastWeek)\n\n\t\tcase 'month':\n\t\t\tconst lastMonth = moment().subtract(1, 'months')\n\t\t\treturn moment(dayObj.dateChecked).isAfter(lastMonth)\n\n\t\tdefault:\n\t\t\treturn true\n\t}\n}\n\nconst createData = (time, amount) => {\n\treturn { time, amount }\n}\n\nconst Chart = props => {\n\tconst { selectStateHistory, chartDisplay, chartDateRange } = props\n\tconst theme = useTheme()\n\n\t// * Chart/Filter Display Options\n\tconst displayType = chartDisplay || 'positive'\n\tconst isAreaChart = !chartDisplay.includes('Increase')\n\n\t// * Chart Data\n\tconst data = selectStateHistory\n\t\t.filter(day => filterDateRange(day, chartDateRange))\n\t\t.slice()\n\t\t.reverse()\n\t\t.map(day => {\n\t\t\treturn createData(\n\t\t\t\tday.dateChecked ? moment(day.dateChecked).format('MM/DD/YYYY') : '',\n\t\t\t\tday[displayType] || 0\n\t\t\t)\n\t\t})\n\n\t// * Chart Customized Inserts\n\tconst xAxis = <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n\tconst yAxis = (\n\t\t<YAxis stroke={theme.palette.text.secondary}>\n\t\t\t<Label\n\t\t\t\tangle={270}\n\t\t\t\tposition=\"left\"\n\t\t\t\tstyle={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n\t\t\t>\n\t\t\t\t{getYLabel(displayType)}\n\t\t\t</Label>\n\t\t</YAxis>\n\t)\n\tconst cartesianGrid = <CartesianGrid strokeDasharray=\"3 3\" />\n\tconst toolTip = <Tooltip />\n\n\t// * Chart Gradients (for Area Chart)\n\tconst chartGradients = (\n\t\t<defs>\n\t\t\t<linearGradient id=\"main\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n\t\t\t\t<stop\n\t\t\t\t\toffset=\"5%\"\n\t\t\t\t\tstopColor={theme.palette.primary.main}\n\t\t\t\t\tstopOpacity={0.8}\n\t\t\t\t/>\n\t\t\t\t<stop\n\t\t\t\t\toffset=\"95%\"\n\t\t\t\t\tstopColor={theme.palette.primary.main}\n\t\t\t\t\tstopOpacity={0}\n\t\t\t\t/>\n\t\t\t</linearGradient>\n\t\t</defs>\n\t)\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<ChartFilters {...props} />\n\n\t\t\t<ResponsiveContainer minHeight={290}>\n\t\t\t\t{isAreaChart ? (\n\t\t\t\t\t<AreaChart\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tmargin={{ top: 8, right: 8, bottom: 0, left: 12 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{chartGradients}\n\t\t\t\t\t\t{xAxis}\n\t\t\t\t\t\t{yAxis}\n\t\t\t\t\t\t{cartesianGrid}\n\t\t\t\t\t\t{toolTip}\n\t\t\t\t\t\t<Area\n\t\t\t\t\t\t\ttype=\"linear\"\n\t\t\t\t\t\t\tdataKey=\"amount\"\n\t\t\t\t\t\t\tstroke={theme.palette.primary.main}\n\t\t\t\t\t\t\tfillOpacity={1}\n\t\t\t\t\t\t\tfill=\"url(#main)\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</AreaChart>\n\t\t\t\t) : (\n\t\t\t\t\t<LineChart\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tmargin={{ top: 8, right: 8, bottom: 0, left: 12 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{xAxis}\n\t\t\t\t\t\t{yAxis}\n\t\t\t\t\t\t{cartesianGrid}\n\t\t\t\t\t\t{toolTip}\n\t\t\t\t\t\t<Line\n\t\t\t\t\t\t\ttype=\"linear\"\n\t\t\t\t\t\t\tdataKey=\"amount\"\n\t\t\t\t\t\t\tstroke={theme.palette.primary.main}\n\t\t\t\t\t\t\tdot={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</LineChart>\n\t\t\t\t)}\n\t\t\t</ResponsiveContainer>\n\t\t</Fragment>\n\t)\n}\n\nChart.propTypes = {\n\tselectStateHistory: PropTypes.array,\n\tchartDisplay: PropTypes.string,\n\tchartDateRange: PropTypes.string,\n\tchangeChartDisplay: PropTypes.func.isRequired, // * Passed down to Filters\n\tchangeChartDateRange: PropTypes.func.isRequired // * Passed down to Filters\n}\n\nChart.defaultProps = {\n\tchartDisplay: '',\n\tchartDateRange: '',\n\tselectStateHistory: []\n}\n\nexport default Chart\n","import React, { Fragment } from 'react'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = () => (\n\t<Fragment>\n\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n\t\t\t<Link color=\"inherit\" href=\"https://github.com/perryf/covid-tracker\">\n\t\t\t\tUS COVID 19 Tracker Source Code\n\t\t\t</Link>\n\t\t\t<span style={{ fontStyle: 'italic' }}> © Perry Fustero 2020</span>\n\t\t</Typography>\n\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n\t\t\t{'All data from '}\n\t\t\t<Link color=\"inherit\" href=\"https://covidtracking.com/\">\n\t\t\t\tThe COVID Tracking Project\n\t\t\t</Link>\n\t\t</Typography>\n\t</Fragment>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme => ({\n\tdrawerPaper: {\n\t\tposition: 'relative',\n\t\twhiteSpace: 'nowrap',\n\t\twidth: drawerWidth,\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen\n\t\t}),\n\t\theight: '100vh',\n\t\toverflowY: 'scroll'\n\t},\n\tdrawerPaperClose: {\n\t\toverflowX: 'hidden',\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen\n\t\t}),\n\t\twidth: theme.spacing(7),\n\t\t[theme.breakpoints.up('xs')]: {\n\t\t\twidth: theme.spacing(9)\n\t\t}\n\t},\n\tlistItem: {\n\t\tcursor: 'pointer',\n\t\t'&:hover': {\n\t\t\tbackground: '#ddd'\n\t\t}\n\t},\n\tlistItemSelected: {\n\t\tbackground: '#dde'\n\t},\n\ttoolbarIcon: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-end',\n\t\tminHeight: 48\n\t}\n}))\n\nconst SideDrawer = props => {\n\tconst {\n\t\tselectState,\n\t\tsideOpen,\n\t\tstatesInfo,\n\t\tchangeState,\n\t\thandleDrawerClose\n\t} = props\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<Drawer\n\t\t\tvariant=\"permanent\"\n\t\t\tclasses={{\n\t\t\t\tpaper: clsx(classes.drawerPaper, !sideOpen && classes.drawerPaperClose)\n\t\t\t}}\n\t\t\topen={sideOpen}\n\t\t>\n\t\t\t<div className={classes.toolbarIcon}>\n\t\t\t\t<IconButton onClick={handleDrawerClose}>\n\t\t\t\t\t<ChevronLeftIcon />\n\t\t\t\t</IconButton>\n\t\t\t</div>\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem\n\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\tclasses.listItem,\n\t\t\t\t\t\tselectState === 'us' && classes.listItemSelected\n\t\t\t\t\t)}\n\t\t\t\t\tonClick={() => changeState('us')}\n\t\t\t\t>\n\t\t\t\t\tUSA\n\t\t\t\t</ListItem>\n\t\t\t\t{statesInfo.map(info => {\n\t\t\t\t\tconst selected = info.state === selectState\n\t\t\t\t\tconst label = sideOpen\n\t\t\t\t\t\t? `${info.name || ''} ${info.state ? `(${info.state})` : ''}`\n\t\t\t\t\t\t: info.state\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={info.state}\n\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\tclasses.listItem,\n\t\t\t\t\t\t\t\tselected && classes.listItemSelected\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tonClick={() => changeState(info.state)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</List>\n\t\t</Drawer>\n\t)\n}\n\nSideDrawer.propTypes = {\n\tselectState: PropTypes.string,\n\tsideOpen: PropTypes.bool.isRequired,\n\tstatesInfo: PropTypes.array,\n\tchangeState: PropTypes.func.isRequired,\n\thandleDrawerClose: PropTypes.func.isRequired\n}\n\nSideDrawer.defaultProps = {\n\tselectState: '',\n\tstatesInfo: []\n}\n\nexport default SideDrawer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme => ({\n\tappBar: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen\n\t\t})\n\t},\n\tappBarShift: {\n\t\tmarginLeft: drawerWidth,\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen\n\t\t})\n\t},\n\ttoolbar: {\n\t\tpaddingRight: 24 // keep right padding when drawer closed\n\t},\n\tmenuButton: {\n\t\tmarginRight: 36,\n\t\t[theme.breakpoints.down('xs')]: {\n\t\t\tdisplay: 'none'\n\t\t}\n\t},\n\tmenuButtonHidden: {\n\t\tdisplay: 'none'\n\t},\n\ttitle: {\n\t\tflexGrow: 1\n\t}\n}))\n\nconst HeaderBar = props => {\n\tconst { sideOpen, handleDrawerOpen } = props\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<AppBar\n\t\t\tposition=\"absolute\"\n\t\t\tclassName={clsx(classes.appBar, sideOpen && classes.appBarShift)}\n\t\t>\n\t\t\t<Toolbar className={classes.toolbar} variant=\"dense\">\n\t\t\t\t<IconButton\n\t\t\t\t\tedge=\"start\"\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\tonClick={handleDrawerOpen}\n\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\tclasses.menuButton,\n\t\t\t\t\t\tsideOpen && classes.menuButtonHidden\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<MenuIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<Typography\n\t\t\t\t\tcomponent=\"h1\"\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\tnoWrap\n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t>\n\t\t\t\t\tUS COVID 19 Tracker\n\t\t\t\t</Typography>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t)\n}\n\nHeaderBar.propTypes = {\n\tsideOpen: PropTypes.bool.isRequired,\n\thandleDrawerOpen: PropTypes.func.isRequired\n}\n\nexport default HeaderBar\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\n\nconst TableDisplay = props => {\n\tconst { selectStateHistory } = props\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n\t\t\t\tHistory\n\t\t\t</Typography>\n\t\t\t<Table size=\"medium\">\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>Date</TableCell>\n\t\t\t\t\t\t<TableCell>Tested Positive</TableCell>\n\t\t\t\t\t\t<TableCell>Negative Tests</TableCell>\n\t\t\t\t\t\t<TableCell>Total Tested</TableCell>\n\t\t\t\t\t\t<TableCell>Percent Positive</TableCell>\n\t\t\t\t\t\t<TableCell>Deaths</TableCell>\n\t\t\t\t\t\t<TableCell>Hospitalized</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{selectStateHistory.map(row => (\n\t\t\t\t\t\t<TableRow key={row.hash}>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.dateChecked\n\t\t\t\t\t\t\t\t\t? moment(row.dateChecked).format('MM/DD/YYYY')\n\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.positive || ''} (+{row.positiveIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.negative || ''} (+{row.negativeIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.totalTestResults || ''} (+\n\t\t\t\t\t\t\t\t{row.totalTestResultsIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.positive && row.totalTestResults\n\t\t\t\t\t\t\t\t\t? `${Math.round(\n\t\t\t\t\t\t\t\t\t\t\t(row.positive / row.totalTestResults) * 100,\n\t\t\t\t\t\t\t\t\t\t\t2\n\t\t\t\t\t\t\t\t\t  )}%`\n\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.death || 0} (+{row.deathIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{row.hospitalized || 0} (+{row.hospitalizedIncrease || 0})\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</Fragment>\n\t)\n}\n\nTableDisplay.propTypes = {\n\tselectStateHistory: PropTypes.array\n}\n\nTableDisplay.defaultProps = {\n\tselectStateHistory: []\n}\n\nexport default TableDisplay\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\n\nconst TWITTER_URL = 'https://twitter.com'\n\nconst formatLink = link => {\n\treturn link ? (\n\t\t<Link color=\"inherit\" href={link}>\n\t\t\t{link}\n\t\t</Link>\n\t) : (\n\t\t''\n\t)\n}\n\nconst formatTwitter = handle => {\n\tif (!handle) return ''\n\n\tconst twitterLink = `${TWITTER_URL}/${handle.replace('@', '')}`\n\n\treturn handle ? (\n\t\t<Link color=\"inherit\" href={twitterLink}>\n\t\t\t{twitterLink}\n\t\t</Link>\n\t) : (\n\t\t''\n\t)\n}\n\nconst formatTitle = (selectState, info) => {\n\tif (selectState === 'us') {\n\t\treturn 'USA'\n\t}\n\tif (info.name) {\n\t\treturn `${info.name} (${info.state})`\n\t}\n\treturn 'Select a State'\n}\n\nconst useStyles = makeStyles({\n\tlinkStyle: {\n\t\tcolor: '#e33371'\n\t},\n\tnotes: {\n\t\tmargin: 4,\n\t\tfontStyle: 'italic'\n\t}\n})\n\nconst StateInfo = props => {\n\tconst { selectStateInfo, selectStateCurrent, selectState } = props\n\tconst classes = useStyles()\n\n\tconst title = formatTitle(selectState, selectStateInfo)\n\tconst primaryLink = formatLink(selectStateInfo.covid19Site)\n\tconst secondaryLink = formatLink(selectStateInfo.covid19SiteSecondary)\n\tconst twitterLink = formatTwitter(selectStateInfo.twitter)\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography component=\"h2\" variant=\"h6\" color=\"primary\">\n\t\t\t\t{title}\n\t\t\t</Typography>\n\t\t\t{selectStateCurrent.grade && (\n\t\t\t\t<Typography component=\"p\" variant=\"caption\" color=\"textSecondary\">\n\t\t\t\t\tData quality grade: {selectStateCurrent.grade}\n\t\t\t\t</Typography>\n\t\t\t)}\n\n\t\t\t<div className={classes.linkStyle}>{primaryLink}</div>\n\t\t\t<div className={classes.linkStyle}>{secondaryLink}</div>\n\t\t\t<div className={classes.linkStyle}>{twitterLink}</div>\n\n\t\t\t<p className={classes.notes}>{selectStateInfo.notes || ''}</p>\n\t\t</div>\n\t)\n}\nStateInfo.propTypes = {\n\tselectState: PropTypes.string,\n\tselectStateInfo: PropTypes.object,\n\tselectStateCurrent: PropTypes.object\n}\n\nStateInfo.defaultProps = {\n\tselectState: '',\n\tselectStateInfo: {},\n\tselectStateCurrent: {}\n}\n\nexport default StateInfo\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Chart from '../chart/Chart'\nimport Container from '@material-ui/core/Container'\nimport Footer from '../footer/Footer'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport SideDrawer from '../sideDrawer/SideDrawer'\nimport HeaderBar from '../headerBar/HeaderBar'\nimport TableDisplay from '../tableDisplay/TableDisplay'\nimport StateInfo from '../stateInfo/StateInfo'\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: 'flex'\n\t},\n\tappBarSpacer: theme.mixins.toolbar, // Moves main down by amount appBar takes up\n\tcontent: {\n\t\tflexGrow: 1,\n\t\theight: '100vh',\n\t\toverflow: 'auto'\n\t},\n\tcontainer: {\n\t\tpaddingTop: theme.spacing(1),\n\t\tpaddingBottom: theme.spacing(1)\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(2),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column'\n\t},\n\tchartPaper: {\n\t\theight: 360\n\t},\n\ttablePaper: {\n\t\toverflow: 'auto'\n\t}\n}))\n\nconst Dashboard = props => {\n\tconst {\n\t\tstatesCurrent,\n\t\tstatesHistoric,\n\t\tstatesInfo,\n\t\tusCurrent,\n\t\tusHistoric\n\t} = props\n\n\tconst [chartDisplay, setChartDisplay] = useState('positive')\n\tconst [chartDateRange, setChartDateRange] = useState('total')\n\tconst [selectState, setSelectedState] = useState('us')\n\tconst [sideOpen, setOpen] = React.useState(false)\n\n\tconst changeState = stateAbr => {\n\t\tsetSelectedState(stateAbr)\n\t}\n\tconst changeChartDisplay = ({ target: { value } }) => {\n\t\tsetChartDisplay(value)\n\t}\n\tconst changeChartDateRange = ({ target: { value } }) => {\n\t\tsetChartDateRange(value)\n\t}\n\tconst handleDrawerClose = () => {\n\t\tsetOpen(false)\n\t}\n\tconst handleDrawerOpen = () => {\n\t\tsetOpen(true)\n\t}\n\n\t// * STYLES\n\tconst classes = useStyles()\n\n\t// * INCLUDES US TOTALS WITH STATES\n\tconst selectStateCurrent =\n\t\tselectState === 'us'\n\t\t\t? usCurrent[0]\n\t\t\t: statesCurrent.find(s => s.state === selectState)\n\tconst selectStateHistory =\n\t\tselectState === 'us'\n\t\t\t? usHistoric\n\t\t\t: statesHistoric.filter(s => s.state === selectState)\n\tconst selectStateInfo = statesInfo.find(s => s.state === selectState)\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<HeaderBar sideOpen={sideOpen} handleDrawerOpen={handleDrawerOpen} />\n\n\t\t\t{/* Sidebar */}\n\t\t\t<SideDrawer\n\t\t\t\tsideOpen={sideOpen}\n\t\t\t\tstatesInfo={statesInfo}\n\t\t\t\tselectState={selectState}\n\t\t\t\tchangeState={changeState}\n\t\t\t\thandleDrawerClose={handleDrawerClose}\n\t\t\t/>\n\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.appBarSpacer} />\n\t\t\t\t<Container maxWidth=\"lg\" className={classes.container}>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{/* StateInfo */}\n\t\t\t\t\t\t<Grid item xs={12} md={12} lg={12}>\n\t\t\t\t\t\t\t<StateInfo\n\t\t\t\t\t\t\t\tselectState={selectState}\n\t\t\t\t\t\t\t\tselectStateInfo={selectStateInfo}\n\t\t\t\t\t\t\t\tselectStateCurrent={selectStateCurrent}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Chart */}\n\t\t\t\t\t\t<Grid item xs={12} md={12} lg={12}>\n\t\t\t\t\t\t\t<Paper className={clsx(classes.paper, classes.chartPaper)}>\n\t\t\t\t\t\t\t\t<Chart\n\t\t\t\t\t\t\t\t\tselectStateHistory={selectStateHistory}\n\t\t\t\t\t\t\t\t\tchartDisplay={chartDisplay}\n\t\t\t\t\t\t\t\t\tchartDateRange={chartDateRange}\n\t\t\t\t\t\t\t\t\tchangeChartDisplay={changeChartDisplay}\n\t\t\t\t\t\t\t\t\tchangeChartDateRange={changeChartDateRange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Recent Table */}\n\t\t\t\t\t\t<Grid item xs={12} md={12} lg={12}>\n\t\t\t\t\t\t\t<Paper className={clsx(classes.paper, classes.tablePaper)}>\n\t\t\t\t\t\t\t\t<TableDisplay selectStateHistory={selectStateHistory} />\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Box pt={4}>\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</Box>\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n\nDashboard.propTypes = {\n\tstatesCurrent: PropTypes.array,\n\tstatesHistoric: PropTypes.array,\n\tstatesInfo: PropTypes.array,\n\tusCurrent: PropTypes.array,\n\tusHistoric: PropTypes.array\n}\n\nDashboard.defaultProps = {\n\tstatesCurrent: [],\n\tstatesHistoric: [],\n\tstatesInfo: [],\n\tusCurrent: [],\n\tusHistoric: []\n}\n\nexport default Dashboard\n","import React, { useState, useEffect } from 'react'\nimport { urlStates, urlDaily, urlInfo, urlUSCurrent, urlUSHistoric } from 'data'\nimport Dashboard from '../dashboard/Dashboard'\nimport './App.css'\n\nconst App = () => {\n\t// * State Init\n\tconst [statesCurrent, setCurrentStates] = useState([])\n\tconst [statesHistoric, setHistoricStates] = useState([])\n\tconst [statesInfo, setInfoStates] = useState([])\n\tconst [usCurrent, setUSCurrent] = useState([])\n\tconst [usHistoric, setUSHistoric] = useState([])\n\n\t// * Effect\n\tuseEffect(() => {\n\t\tfetch(urlStates)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => setCurrentStates(json))\n\t\t\t.catch(err => console.info(err))\n\n\t\tfetch(urlDaily)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => setHistoricStates(json))\n\t\t\t.catch(err => console.info(err))\n\n\t\tfetch(urlInfo)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json =>\n\t\t\t\tsetInfoStates(\n\t\t\t\t\tjson.sort((a, b) => {\n\t\t\t\t\t\tif (a.name < b.name) return -1\n\t\t\t\t\t\tif (b.name < a.name) return 1\n\t\t\t\t\t\treturn 0\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t\t.catch(err => console.info(err))\n\n\t\tfetch(urlUSCurrent)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => setUSCurrent(json))\n\t\t\t.catch(err => console.info(err))\n\n\t\tfetch(urlUSHistoric)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => setUSHistoric(json))\n\t\t\t.catch(err => console.info(err))\n\t}, [])\n\n\treturn (\n\t\t<Dashboard\n\t\t\tstatesCurrent={statesCurrent}\n\t\t\tstatesHistoric={statesHistoric}\n\t\t\tstatesInfo={statesInfo}\n\t\t\tusCurrent={usCurrent}\n\t\t\tusHistoric={usHistoric}\n\t\t/>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from 'components/app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}